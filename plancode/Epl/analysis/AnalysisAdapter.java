/* This file was generated by SableCC (http://www.sablecc.org/). */

package Epl.analysis;

import java.util.*;
import Epl.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable in;
    private Hashtable out;

    public Object getIn(Node node)
    {
        if(in == null)
        {
            return null;
        }

        return in.get(node);
    }

    public void setIn(Node node, Object in)
    {
        if(this.in == null)
        {
            this.in = new Hashtable(1);
        }

        if(in != null)
        {
            this.in.put(node, in);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(out == null)
        {
            return null;
        }

        return out.get(node);
    }

    public void setOut(Node node, Object out)
    {
        if(this.out == null)
        {
            this.out = new Hashtable(1);
        }

        if(out != null)
        {
            this.out.put(node, out);
        }
        else
        {
            this.out.remove(node);
        }
    }
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAProgram(AProgram node)
    {
        defaultCase(node);
    }

    public void caseABralist(ABralist node)
    {
        defaultCase(node);
    }

    public void caseAList(AList node)
    {
        defaultCase(node);
    }

    public void caseAHead(AHead node)
    {
        defaultCase(node);
    }

    public void caseANonf(ANonf node)
    {
        defaultCase(node);
    }

    public void caseANonp(ANonp node)
    {
        defaultCase(node);
    }

    public void caseANonfin(ANonfin node)
    {
        defaultCase(node);
    }

    public void caseANonprod(ANonprod node)
    {
        defaultCase(node);
    }

    public void caseAAtom(AAtom node)
    {
        defaultCase(node);
    }

    public void caseATarget(ATarget node)
    {
        defaultCase(node);
    }

    public void caseAResource(AResource node)
    {
        defaultCase(node);
    }

    public void caseATechnique(ATechnique node)
    {
        defaultCase(node);
    }

    public void caseAProduct(AProduct node)
    {
        defaultCase(node);
    }

    public void caseAProducttail(AProducttail node)
    {
        defaultCase(node);
    }

    public void caseAJointProducttail(AJointProducttail node)
    {
        defaultCase(node);
    }

    public void caseAResstatStatement(AResstatStatement node)
    {
        defaultCase(node);
    }

    public void caseATechstatStatement(ATechstatStatement node)
    {
        defaultCase(node);
    }

    public void caseAFtechstatStatement(AFtechstatStatement node)
    {
        defaultCase(node);
    }

    public void caseATargstatStatement(ATargstatStatement node)
    {
        defaultCase(node);
    }

    public void caseAFinalstatStatement(AFinalstatStatement node)
    {
        defaultCase(node);
    }

    public void caseAProdstatStatement(AProdstatStatement node)
    {
        defaultCase(node);
    }

    public void caseAStatementlist(AStatementlist node)
    {
        defaultCase(node);
    }

    public void caseAStatements(AStatements node)
    {
        defaultCase(node);
    }

    public void caseTFloatingConstant(TFloatingConstant node)
    {
        defaultCase(node);
    }

    public void caseTFrozen(TFrozen node)
    {
        defaultCase(node);
    }

    public void caseTTech(TTech node)
    {
        defaultCase(node);
    }

    public void caseTRes(TRes node)
    {
        defaultCase(node);
    }

    public void caseTTarg(TTarg node)
    {
        defaultCase(node);
    }

    public void caseTNonft(TNonft node)
    {
        defaultCase(node);
    }

    public void caseTNonpt(TNonpt node)
    {
        defaultCase(node);
    }

    public void caseTBra(TBra node)
    {
        defaultCase(node);
    }

    public void caseTKet(TKet node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTArrow(TArrow node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    public void caseTCodecomment(TCodecomment node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(Node node)
    {
    }
}
