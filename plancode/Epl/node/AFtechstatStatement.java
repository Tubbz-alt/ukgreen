/* This file was generated by SableCC (http://www.sablecc.org/). */

package Epl.node;

import java.util.*;
import Epl.analysis.*;

public final class AFtechstatStatement extends PStatement
{
    private TFrozen _frozen_;
    private PTechnique _technique_;

    public AFtechstatStatement()
    {
    }

    public AFtechstatStatement(
        TFrozen _frozen_,
        PTechnique _technique_)
    {
        setFrozen(_frozen_);

        setTechnique(_technique_);

    }
    public Object clone()
    {
        return new AFtechstatStatement(
            (TFrozen) cloneNode(_frozen_),
            (PTechnique) cloneNode(_technique_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFtechstatStatement(this);
    }

    public TFrozen getFrozen()
    {
        return _frozen_;
    }

    public void setFrozen(TFrozen node)
    {
        if(_frozen_ != null)
        {
            _frozen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _frozen_ = node;
    }

    public PTechnique getTechnique()
    {
        return _technique_;
    }

    public void setTechnique(PTechnique node)
    {
        if(_technique_ != null)
        {
            _technique_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _technique_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_frozen_)
            + toString(_technique_);
    }

    void removeChild(Node child)
    {
        if(_frozen_ == child)
        {
            _frozen_ = null;
            return;
        }

        if(_technique_ == child)
        {
            _technique_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_frozen_ == oldChild)
        {
            setFrozen((TFrozen) newChild);
            return;
        }

        if(_technique_ == oldChild)
        {
            setTechnique((PTechnique) newChild);
            return;
        }

    }
}
