/* This file was generated by SableCC (http://www.sablecc.org/). */

package Epl.node;

import Epl.analysis.*;

public final class X1PNonp extends XPNonp
{
    private XPNonp _xPNonp_;
    private PNonp _pNonp_;

    public X1PNonp()
    {
    }

    public X1PNonp(
        XPNonp _xPNonp_,
        PNonp _pNonp_)
    {
        setXPNonp(_xPNonp_);
        setPNonp(_pNonp_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPNonp getXPNonp()
    {
        return _xPNonp_;
    }

    public void setXPNonp(XPNonp node)
    {
        if(_xPNonp_ != null)
        {
            _xPNonp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPNonp_ = node;
    }

    public PNonp getPNonp()
    {
        return _pNonp_;
    }

    public void setPNonp(PNonp node)
    {
        if(_pNonp_ != null)
        {
            _pNonp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pNonp_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPNonp_ == child)
        {
            _xPNonp_ = null;
        }

        if(_pNonp_ == child)
        {
            _pNonp_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPNonp_) +
            toString(_pNonp_);
    }
}
